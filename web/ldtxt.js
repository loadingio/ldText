// Generated by LiveScript 1.3.1
(function(){
  var ldText;
  ldText = function(opt){
    opt == null && (opt = {});
    this.opt = opt;
    this.root = !opt.root
      ? document.createElement("div")
      : typeof opt.root === 'string'
        ? document.querySelector(opt.root)
        : opt.root;
    this.root.classList.add('ldtxt');
    this.setText(this.opt.text || this.root.textContent);
    this.animations = opt.animations || [];
    this.colors = opt.colors || null;
    this.prepare();
    return this;
  };
  ldText.prototype = import$(Object.create(Object.prototype), {
    setText: function(it){
      return this.text = it || " ... oi.loading.io ...";
    },
    prepare: function(){
      var nodes, text, c, ref$, _, i$, to$, i, idx, a, cls, ani, dur, lat, delay;
      nodes = [];
      text = this.text;
      c = this.colors;
      if (this.opt.byWord) {
        ref$ = [[], this.text.split(' ')], text = ref$[0], _ = ref$[1];
        _ = this.text.split(' ');
        for (i$ = 0, to$ = _.length; i$ < to$; ++i$) {
          i = i$;
          text.push(_[i]);
          text.push(' ');
        }
      }
      for (i$ = 0, to$ = text.length; i$ < to$; ++i$) {
        i = i$;
        nodes.push("<span" + (c ? ' style="color:' + c[i % c.length] + '"' : '') + ">" + text[i] + "</span>");
      }
      for (i$ = 0, to$ = this.animations.length; i$ < to$; ++i$) {
        idx = i$;
        a = this.animations[idx];
        ref$ = [a.className, a.animation, a.duration, a.latency, a.delay], cls = ref$[0], ani = ref$[1], dur = ref$[2], lat = ref$[3], delay = ref$[4];
        nodes = nodes.map(fn$);
      }
      return this.root.innerHTML = nodes.join('');
      function fn$(d, i){
        var _delay;
        _delay = (delay || 0) + (lat || 1) * i / nodes.length;
        return "<span class=\"" + cls + "\" style=\"\n" + (ani ? 'animation:' + ani + ';' : '') + "animation-delay:" + _delay + "s;\n" + (dur ? 'animation-duration:' + dur + 's;' : '') + "\">" + d + "</span>";
      }
    }
  });
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ldText;
  }
  if (window) {
    return window.ldText = ldText;
  }
})();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}